border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
x2 <- mean(x1$daily_tot_steps,na.rm=TRUE)
x2
## *****median of total steps per day*****
x3 <- median(x1$daily_tot_steps,na.rm=TRUE)
x3
x1
mean(x1)
gc
by_date <- group_by(data2,date)
x1 <- summarize(by_date,sum(steps))
colnames(x1)[2] <- "daily_tot_steps"
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
by_date2 <- group_by(data6,date)
p1 <- summarize(by_date2,sum(steps))
colnames(p1)[2] <- "daily_tot_steps"
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
p2 <- mean(x1$daily_tot_steps,na.rm=TRUE)
p2
x2
p3 <- median(x1$daily_tot_steps,na.rm=TRUE)
p3
x3
png(filename="stepsperdayhisto1.png", width=480, height=480)
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
dev.off()
png(filename="stepsperdayhisto2.png", width=480, height=480)
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
dev.off()
?histo
?his
?hist
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim =30,
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim =30000,
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30)
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30)
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
png(filename="stepsperdayhisto1.png", width=480, height=480)
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
dev.off()
png(filename="stepsperdayhisto2.png", width=480, height=480)
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day",
xlab = "number of steps")
dev.off()
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day",
sub = "with missing data",
xlab = "number of steps")
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day",
subtitle = "with missing data",
xlab = "number of steps")
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day",
mtext = "with missing data",
xlab = "number of steps")
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day\with missing data",
xlab = "number of steps")
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day\nwith missing data",
xlab = "number of steps")
png(filename="stepsperdayhisto1.png", width=480, height=480)
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day\nwith missing data",
xlab = "number of steps")
dev.off()
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day\nwith imputed data",
xlab = "number of steps")
png(filename="stepsperdayhisto2.png", width=480, height=480)
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day\nwith imputed data",
xlab = "number of steps")
dev.off()
p2 <- mean(p1$daily_tot_steps,na.rm=TRUE)
p2
p3 <- median(p1$daily_tot_steps,na.rm=TRUE)
p3
data7 <- mutate(data6, workweek = weekday(date))
data7 <- mutate(data6, workweek = weekdays(date))
?weekdays
workdays <- c(Monday:Friday)
workdays <- c("Monday":"Friday")
workday < c("Monday","Tuesday","Wednesday","Thursday","Friday")
daysvec < c("Monday","Tuesday","Wednesday","Thursday","Friday")
workday <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
weekend <- c("Saturday","Sunday")
data7 <- merge(workday,data7,by.y = "workweek")
data7 <- merge(workday,data7,by.x = "workday",by.y = "workweek")
workday <- data.frame(workday=workday, mat1 = c("Monday","Tuesday","Wednesday","Thursday","Friday"))
weekend <- data.frame(weekend=weekend,mat2=c("Saturday","Sunday"))
data7 <- merge(workday,data7,by.x = "mat1",by.y = "workweek")
View(data7)
data7 <- mutate(data6, workweek = weekdays(date))
workday <- data.frame(workday=workday, mat1 = c("Monday","Tuesday","Wednesday","Thursday","Friday"))
data7 <- merge(workday,data7,by.x = "mat1",by.y = "workweek")
data7 <- merge(data7,workday,by.x = "workweek",by.y = "mat1")
data7 <- mutate(data6, workweek = weekdays(date))
workday <- data.frame(workday=workday, mat1 = c("Monday","Tuesday","Wednesday","Thursday","Friday"))
data7 <- merge(data7,workday,by.x = "workweek",by.y = "mat1")
data7 <- mutate(data6, workweek = weekdays(date))
workday <- data.frame(workday=workday, mat1 = c("Monday","Tuesday","Wednesday","Thursday","Friday"))
data7 <- merge(workday,data7,by.x = "mat1",by.y = "workweek")
?match
data7 <- mutate(data6, workweek = weekdays(date))
data71 <- subset(data7$workweek=="Saturday"&&data7$workweek=="Sunday")
data71 <- subset(data7$workweek=="Saturday" && data7$workweek=="Sunday")
data71 <- subset(data7$workweek=="Saturday")## && data7$workweek=="Sunday")
data71 <- subset(data7$workweek="Saturday")## && data7$workweek=="Sunday")
?identical
data7 <- mutate(data6, identical(workweek, weekdays(date)))
data71 <- subset(data7$workweekidentical"Saturday")## && data7$workweek=="Sunday")
data71 <- subset(identical(data7$workweek,"Saturday")## && data7$workweek=="Sunday")
)
data71 <- subset(identical(data7$workweek,"Saturday",num.eq=F))## && data7$workweek=="Sunday")
data7 <- mutate(data6, workweek = weekdays(date))
?identical
data7 <- mutate(data6, workweek = weekdays(date))
View(data7)
identical(data7[6,4],"Saturday")
data71 <- subset(identical(data7[,4],"Saturday",num.eq=F))## && data7$workweek=="Sunday")
data71 <- subset(identical(data7[,4],"Saturday"))## && data7$workweek=="Sunday")
?subset
data71 <- identical(data7[,4],"Saturday")## && data7$workweek=="Sunday")
data71 <- subset(data7,identical(data7[,4],"Saturday"))## && data7$workweek=="Sunday")
View(data71)
data71 <- subset(data7,identical(data7[,4],"Saturday",drop=FALSE))## && data7$workweek=="Sunday")
data7 <- mutate(data6, workweek = weekdays(date))
data71 <- subset(data7,identical(data7[,4],"Saturday",drop=FALSE))## && data7$workweek=="Sunday")
r
r
data7 <- mutate(data6, workweek = weekdays(date))
data71 <- subset(data7,identical(data7[,4],"Saturday"))## && data7$workweek=="Sunday")
data71 <- subset(data7,identical(data7$workweek,"Saturday"))## && data7$workweek=="Sunday")
data71 <- subset(data7="Saturday")
data71 <- subset(data7,data7[,4]="Saturday")
data71 <- subset(data7,data7[,4]=="Saturday")
View(data71)
data71 <- subset(data7,data7[,4]=="Saturday"|| data7[,4]=="Sunday"))
data71 <- subset(data7,data7[,4]=="Saturday"| data7[,4]=="Sunday"))
data7 <- mutate(data6, workweek = weekdays(date))
##data71 <- subset(data7,identical(data7$workweek,"Saturday"))## && data7$workweek=="Sunday")
data71 <- subset(data7,data7[,4]=="Saturday"| data7[,4]=="Sunday"))
data71 <- subset(data7,data7[,4]=="Saturday"| data7[,4]=="Sunday")
View(data71)
data72 <- subset(data7,data7[,4]=="Monday"|
data7[,4]=="Tuesday"|
data7[,4]=="Wednesday"|
data7[,4]=="Thursday"|
data7[,4]=="Friday")
data71 <- mutate(data71,workweek="weekend")
data72 <- mutate(data72,workweek="weekday")
data8 <- rbind(data71,data72)
View(data71)
View(data72)
View(data8)
data8 <- mutate(data8,workweek = as.factor(workweek))
xyplot(average_steps~time_of_day | workweek, data=z1,layout =c(2,1))
library(lattice)
xyplot(average_steps~time_of_day | workweek, data=z1,layout =c(2,1))
by_interval2 <- group_by(data2,interval)
z1 <- summarize(by_interval2,mean(steps,na.rm=TRUE))
by_interval2 <- group_by(data8,interval)
z1 <- summarize(by_interval2,mean(steps,na.rm=TRUE))
colnames(z1) <- c("time_of_day","average_steps")
library(lattice)
xyplot(average_steps~time_of_day | workweek, data=z1,layout =c(2,1))
View(by_interval2)
tail(by_interval)
tail(data6)
gc
data1 <- read.csv(".\\activity.csv",stringsAsFactors=FALSE)
library(dplyr)
data1 <- mutate(data1,interval = sprintf("%04d",data1$interval))
data1 <- mutate(data1,interval = as.POSIXct(data1$interval,
origin="2012-01-01",
format ="%H%M",usetz = FALSE))
data1 <- mutate(data1,date = as.POSIXct(data1$date,
origin="2012-01-01",
usetz = FALSE))
data2 <- tbl_df(data1)
by_date <- group_by(data2,date)
x1 <- summarize(by_date,sum(steps))
colnames(x1)[2] <- "daily_tot_steps"
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day\nwith missing data",
xlab = "number of steps")
x2 <- mean(x1$daily_tot_steps,na.rm=TRUE)
x2
## *****median of total steps per day*****
x3 <- median(x1$daily_tot_steps,na.rm=TRUE)
x3
by_interval <- group_by(data2,interval)
y1 <- summarize(by_interval,mean(steps,na.rm=TRUE))
colnames(y1) <- c("time_of_day","average_steps")
with(y1, plot(time_of_day,average_steps,type = "l",
xlab = "time of day",
ylab = "average steps",
main ="average activity over day"))
pb <- max(y1$average_steps)
pb
days_avg <- arrange(y1,desc(average_steps))
pbtime <- format(days_avg[1,1],format ="%H:%M")
pbtime ## personal best!
days_avg <- arrange(days_avg,time_of_day)
data4 <- subset(data2,is.na(data2$steps),drop=FALSE)
data5 <- subset(data2,!is.na(data2$steps),drop=FALSE)
data4 <- data4[,2:3]
data4a <- merge(data4, days_avg, by.x = "interval", by.y = "time_of_day")
data4a <- data4a[,c(3,2,1)]
data4a[1] <- round(data4a[1])
colnames(data4a) <- c("steps","date","interval")
data6 <- rbind(data4a,data5)
by_date2 <- group_by(data6,date)
p1 <- summarize(by_date2,sum(steps))
colnames(p1)[2] <- "daily_tot_steps"
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day\nwith imputed data",
xlab = "number of steps")
p2 <- mean(p1$daily_tot_steps,na.rm=TRUE)
p2
## *****median of total steps per day*****
p3 <- median(p1$daily_tot_steps,na.rm=TRUE)
p3
data7 <- mutate(data6, workweek = weekdays(date))
data71 <- subset(data7,data7[,4]=="Saturday"|
data7[,4]=="Sunday")
data72 <- subset(data7,data7[,4]=="Monday"|
data7[,4]=="Tuesday"|
data7[,4]=="Wednesday"|
data7[,4]=="Thursday"|
data7[,4]=="Friday")
data71 <- mutate(data71,workweek="weekend")
data72 <- mutate(data72,workweek="weekday")
data8 <- rbind(data71,data72)
data8 <- mutate(data8,workweek = as.factor(workweek))
by_interval2 <- group_by(data8,interval)
z1 <- summarize(by_interval2,mean(steps,na.rm=TRUE))
tail(z1)
z1 <- summarize(by_interval2,mean(steps))
z1 <- summarize(by_interval2,mean(steps))
tail(z1)
z1 <- summarize(by_interval2,workweek,mean(steps))
z1 <- summarise(by_interval2,workweek,mean(steps))
by_interval2 <- group_by(data8,workweek,interval)
View(by_interval2)
z1 <- summarise(by_interval2,workweek,mean(steps))
z1 <- summarise(by_interval2,mean(steps))
View(`z1`)
colnames(z1[,2:3]) <- c("time_of_day","average_steps")
xyplot(average_steps~time_of_day | workweek, data=z1,layout =c(2,1))
z1 <- summarise(by_interval2,mean(steps))
colnames(z1[,2:3]) <- c("time_of_day","average_steps")
colnames(z1) <- c("workweek","time_of_day","average_steps")
xyplot(average_steps~time_of_day | workweek, data=z1,layout =c(2,1))
xyplot(average_steps~time_of_day | workweek, data=z1,layout =c(2,1), type = b)
xyplot
?xyplot
xyplot(average_steps~time_of_day | workweek, data=z1,layout =c(2,1), lines)
colnames(z1) <- c("workweek","time_of_day","average_steps")
xyplot(average_steps~time_of_day | workweek, data=z1,layout =c(2,1))
help(xyplot)
library(knitr)
library(rmarkdown)
knit(RepData_PA1.Rmd)
knit(RepData_PA1.Rmd)
knit2html(RepData_PA1.Rmd)
setwd("C:/000 R working space")
setwd("C:/000 R working space")
knit2html(RepData_PA1.Rmd)
library(dplyr)
install.packages("dplyr")
install.packages("knitr")
library("knitr", lib.loc="C:/Program Files/R/R-3.1.2/library")
install.packages("rmarkdown")
library("rmarkdown", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("dplyr", lib.loc="C:/Program Files/R/R-3.1.2/library")
install.packages("Rcpp")
library("dplyr", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("knitr", lib.loc="C:/Program Files/R/R-3.1.2/library")
library("rmarkdown", lib.loc="C:/Program Files/R/R-3.1.2/library")
xyplot(average_steps ~ time_of_day | workweek, data=z1,layout =c(2,1))
library(lattice)
xyplot(average_steps ~ time_of_day | workweek, data=z1,layout =c(2,1))
xyplot(average_steps ~ time_of_day | workweek, data=z1,layout =c(1,2))
z1 <- mutate(z1,time_of_day = as.POSIXct(z1$time_of_day,
origin="2012-01-01",
format ="%H%M",usetz = FALSE))
xyplot(average_steps ~ time_of_day | workweek, data=z1,layout =c(1,2),labels=format(time_of_day, "%H%M"))
z1 <- summarise(by_interval2,mean(steps))
colnames(z1) <- c("workweek","time_of_day","average_steps")
xyplot(average_steps ~ time_of_day | workweek, data=z1,layout =c(1,2),labels=format(time_of_day, "%H%M"))
xyplot(average_steps ~ time_of_day | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(at= as.numeric(ts),
labels=format(ts, "%H%M"))))
z1 <- summarise(by_interval2,mean(steps))
xyplot(average_steps ~ time_of_day | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(at= as.numeric(interval),
labels=format(interval, "%H%M"))))
xyplot(steps ~ time_of_day | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(at= as.numeric(interval),
labels=format(interval, "%H%M"))))
xyplot(mean(steps) ~ time_of_day | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(at= as.numeric(interval),
labels=format(interval, "%H%M"))))
colnames(z1) <- c("workweek","time","avgsteps")
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(at= as.numeric(time),
labels=format(time, "%H%M"))))
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(at= as.POSIXct(time),
labels=format(time, "%H%M"))))
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(labels=format(time, "%H%M"))))
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(at= as.POSIXct(time),
labels=format(time, "%H%M"))))
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(at= as.numeric(time),
labels=format(time, "%H%M"))))
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(at= as.date(time),
labels=format(time, "%H%M"))))
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(at= as.Date(time),
labels=format(time, "%H%M"))))
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(at= as.numeric(time),
labels=format(time, "%H%M"))))
?xyplot
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),
scales=list(x=list(
labels=format(time, "%H%M"))))
data1 <- read.csv(".\\activity.csv",stringsAsFactors=FALSE)
library(dplyr)
data1 <- mutate(data1,interval = sprintf("%04d",data1$interval))
data1 <- mutate(data1,interval = as.POSIXct(data1$interval,
format ="%H%M",usetz = FALSE))
data1 <- mutate(data1,date = as.POSIXct(data1$date,
origin="2012-01-01",
usetz = FALSE))
data2 <- tbl_df(data1)
by_date <- group_by(data2,date)
x1 <- summarize(by_date,sum(steps))
colnames(x1)[2] <- "daily_tot_steps"
hist(x1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day\nwith missing data",
xlab = "number of steps")
x2 <- mean(x1$daily_tot_steps,na.rm=TRUE)
x2
## *****median of total steps per day*****
x3 <- median(x1$daily_tot_steps,na.rm=TRUE)
x3
by_interval <- group_by(data2,interval)
y1 <- summarize(by_interval,mean(steps,na.rm=TRUE))
colnames(y1) <- c("time_of_day","average_steps")
with(y1, plot(time_of_day,average_steps,type = "l",
xlab = "time of day",
ylab = "average steps",
main ="average activity over day"))
pb <- max(y1$average_steps)
pb
days_avg <- arrange(y1,desc(average_steps))
pbtime <- format(days_avg[1,1],format ="%H:%M")
pbtime ## personal best!
days_avg <- arrange(days_avg,time_of_day)
data4 <- subset(data2,is.na(data2$steps),drop=FALSE)
data5 <- subset(data2,!is.na(data2$steps),drop=FALSE)
## tidy and substitute average steps for NAs
data4 <- data4[,2:3]
data4a <- merge(data4, days_avg, by.x = "interval", by.y = "time_of_day")
data4a <- data4a[,c(3,2,1)]
## optional rounding term to make steps integer values
data4a[1] <- round(data4a[1])
colnames(data4a) <- c("steps","date","interval")
data6 <- rbind(data4a,data5)
by_date2 <- group_by(data6,date)
p1 <- summarize(by_date2,sum(steps))
colnames(p1)[2] <- "daily_tot_steps"
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day\nwith imputed data",
xlab = "number of steps")
dev.off()
hist(p1$daily_tot_steps,breaks = 10, col = "cornflowerblue",
ylim = c(0,30),
border ="white",
main = "distribution of steps per day\nwith imputed data",
xlab = "number of steps")
p2 <- mean(p1$daily_tot_steps,na.rm=TRUE)
p2
## *****median of total steps per day*****
p3 <- median(p1$daily_tot_steps,na.rm=TRUE)
p3
data7 <- mutate(data6, workweek = weekdays(date))
## as before, split into two sets assign factors and recombine
data71 <- subset(data7,data7[,4]=="Saturday"|
data7[,4]=="Sunday")
data72 <- subset(data7,data7[,4]=="Monday"|
data7[,4]=="Tuesday"|
data7[,4]=="Wednesday"|
data7[,4]=="Thursday"|
data7[,4]=="Friday")
data71 <- mutate(data71,workweek="weekend")
data72 <- mutate(data72,workweek="weekday")
data8 <- rbind(data71,data72)
data8 <- mutate(data8,workweek = as.factor(workweek))
##*****calculate average steps per interval by weekday & weekend*****
by_interval2 <- group_by(data8,workweek,interval)
z1 <- summarise(by_interval2,mean(steps))
colnames(z1) <- c("workweek","time","avgsteps")
with(z1, plot(time_of_day,average_steps,type = "l",
xlab = "time of day",
ylab = "average steps",
main ="average activity over day"))
library(lattice)
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2))
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),type =p,color="blue")
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),type = "l",col = "blue")
xyplot(avgsteps ~ time | workweek,
data=z1,layout =c(1,2),type = "l",col = "blue",scales=list(x=list(format="%H%M")))
setwd("C:/Documents and Settings/CB/RepData_PeerAssessment1")
